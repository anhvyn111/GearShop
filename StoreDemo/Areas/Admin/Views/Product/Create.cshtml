@model DataProvider.Framework.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
    @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data", id = "add_product_form" }))
    {
        @Html.AntiForgeryToken()
<div class="form-horizontal container">
    <h2>Thêm sản phẩm</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class="alert alert-danger", @role="alert" })
    @Html.HiddenFor(model => model.ProductID)
    <div class="form-group">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-12">
            @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", @id="tb-product-name-create" })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger", @id= "ms-product-name-create" })
        </div>
    </div>

    <div class="row mt-2">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.PromotionPrice, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row mt-2">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.CategoryID, ViewBag.Category as SelectList, "--Chọn--", new { @class = "form-control", @id = "dropdown-category-create" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-4">
            <label class="control-label col-md-2">Ảnh:</label>
            <div class="col-md-10">
                <input type="file" multiple="multiple" name="images">
            </div>
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Quanlity, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Quanlity, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Quanlity, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
   
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-12">
            @Html.TextAreaFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group text-center mt-3">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Tạo" class="btn btn-default btn-success" />
        </div>
    </div>
</div>
    }
@section Script{
    <script>
        CKEDITOR.replace('Detail');
        $('#dropdown-category-create').on('change', function (e) {
            e.preventDefault();
            let id = $(this).val();
            ListCreateTagsByCategory(id);
        });


    </script>
}

