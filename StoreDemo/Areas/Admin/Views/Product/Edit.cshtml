@model DataProvider.Framework.Product
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { @id="form-edit-product"}))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal container">
    <h2> Chỉnh sửa sản phẩm</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductID, new { @id="product-id-edit"})
    <div class="form-group">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-12">
            @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", @id= "tb-product-name-edit" })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger", @id= "ms-product-name-edit" })
        </div>
    </div>

    <div class="row mt-2">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.TextBoxFor(model => model.PromotionPrice, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.CategoryID, ViewBag.Category as SelectList, new { @class = "form-control" ,@id= "dropdown-category-edit" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-12">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-12">
            @Html.TextAreaFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductTag, htmlAttributes: new { @class = "control-label col-md-6" })
        <input type="hidden" name="CheckBoxTags">
        <div class="ms-4 col-md-12" id="checkbox-product-tag-edit">
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Thẻ khác:</label>
        <div class="col-md-12">
            @Html.TextBoxFor(model => model.ProductTag, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductTag, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group text-center mt-3 row">
        <div class="col-md-offset-2 col-md-10">
            <a href="/Admin/Product/Index" type="button" value="" class="btn btn-default btn-secondary">Trở về</a>
            <input type="submit" value="Xác nhận" class="btn btn-default btn-success" />
        </div>
    </div>
</div>
}
@section Script{
    <script>
        CKEDITOR.replace('Detail');
        $(document).ready(function () {
            var id = $('#dropdown-category-edit').val();
            var productID = $('#product-id-edit').val();
            ListCreateTagsByCategory(id);
            $.ajax({
                url: '/Admin/Product/ListEditTagsByCategory',
                type: 'GET',
                data: {
                    id: id, productID: productID
                },
                dataType: 'json',
                success: function (res) {
                    var data = ``;
                    for (var item of res) {
                        if (item.ProductID == productID) {
                            data += `
                    <div class="form-check">
                      <input class="form-check-input"  name="CheckBoxTags" type="checkbox" value="${item.TagID}" checked>
                      <label class="form-check-label">${item.TagName}</label>
                    </div>
                `;
                        }
                        else {
                            data += `
                    <div class="form-check">
                      <input class="form-check-input" name="CheckBoxTags" type="checkbox" value="${item.TagID}">
                      <label class="form-check-label">${item.TagName}</label>
                    </div>
                `;
                        }
                    }
                    $('#checkbox-product-tag-edit').html(data);
                }

            });
        });
    </script>
}
